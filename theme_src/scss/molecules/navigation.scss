.darkTheme .siteNavi, .siteNavi .triggered {
  background-color: $darkThemeBg;
  -webkit-backface-visibility: hidden !important;
  -webkit-transform:translate3d(0,0,0) !important;
  .navList,
  .lang {
    li {
      a {
        border-color: $darkThemeBg;
        color: $txtInvert;
      }
      &.active {
        > a {
          border-color: $txtInvert;
          color: $txtInvert;
        }
      }
    }
  }
}
.naviGrid {
  @include mdUp {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
  }
}
.siteNavi {
  position: sticky;
  position: -webkit-sticky;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  top: 0;
  width: 100%;
  height: 50px;
  background-color: $darkThemeBg;
  @extend %hiddenMdDown;
  @include smUp {
    background-color: $bgColor;
  }
  z-index: 1000;
  &.shadowSeparator {
    @extend %shadow;
    background-color: $darkThemeBg;
    .navList {
      grid-column: span 4;
    }
  }
  .stickyNavBrand {
    display: none;
    opacity: 0;
  }
  .triggered {
    text-decoration: none;
    @include transition;
    @extend %shadow;
    @include smDown {
      grid-column: span 2;
      @include flexBox(row, flex-start, center);
    }
    .stickyNavBrand {
      display: flex;
      opacity: 1;
      @include transition(opacity);
      transition-delay: 1s;
    }
    .navLogo {
      width: $navLogoSize;
      > * {
        vertical-align: bottom;
      }
      svg {
        rect {
          fill: $darkThemeBg;
        }
      }
    }
    img {
      width: 50px;
      margin-right: 20px;
    }
    .navLogoTxt {
      padding-left: 10px;
      > * {
        margin: 0;
        @extend %fontS;
      }
    }
    &.hidden {
      opacity: 0;
      @include transition(opacity);
      display: none;
    }
    &.visible {
      opacity: 1;
      @include transition(opacity);
    }
  }

  .navMobileToggle {
    @include hiddenSmUp;
  }
  .navPosition {
    grid-column: 2 / span 10;
  }
  .navList,
  .lang {
    @include hiddenSmDown;
    list-style: none;
    padding-left: 0;
    margin: 0;
    @include flexBox(row, center, center);
    align-self: baseline;

    button {
      background: transparent;
      border: none;
      color: $txtColor;
      vertical-align: bottom;
    }

    > li {
      &:first-child {
        margin-left: -10px;
      }
      > a,
      > button {
        @extend %fontXS;
        padding: 10px;
        text-decoration: none;
        display: block;
        border-top: solid 4px $bgColor;
        @include transition;
        &:hover,
        &:focus,
        &:focus-within {
          border-top: solid 4px $txtColor;
          text-decoration: none;
          cursor: pointer;
          opacity: 0.7;
        }
      }
      &.active > a {
        border-top: solid 4px $txtColor;
      }
    }
  }
}
